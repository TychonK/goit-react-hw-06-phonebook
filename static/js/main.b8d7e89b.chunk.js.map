{"version":3,"sources":["redux/actions.js","components/Contacts_List/ListItems.js","components/Form/Form.js","components/Filter/Filter.js","App.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","filter","pageLoaded","connect","state","arr","contacts","filterWord","dispatch","e","actions","val","name","toLowerCase","includes","map","index","number","className","id","type","onClick","onSubmit","obj","existing","nameId","uuid","numberId","useState","setName","setNumber","preventDefault","some","alert","htmlFor","value","placeholder","pattern","title","required","onChange","target","handleSearch","onLoad","existingContacts","useEffect","localStorage","getItem","JSON","parse","setItem","stringify","reducer","createReducer","action","payload","contactsList","contact","store","configureStore","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8d7e89b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\n\r\n// const addContact = (value) => ({\r\n//     type: 'form/addContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const deleteContact = (value) => ({\r\n//     type: 'form/deleteContact',\r\n//     payload: value,\r\n// })\r\n\r\n// const filter = (value) => ({\r\n//     type: 'filter/changeFilter',\r\n//     payload: value,\r\n// })\r\n\r\n// const pageLoaded = (value) => ({\r\n//     type: 'page/pageLoaded',\r\n//     payload: value,\r\n// })\r\n\r\nexport const addContact = createAction('form/addContact')\r\nexport const deleteContact = createAction('form/deleteContact')\r\nexport const filter = createAction('filter/changeFilter')\r\nexport const pageLoaded = createAction('page/pageLoaded')","import { connect } from 'react-redux'\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction ListItems({ arr, filterWord, deleteContact }) {\r\n    const listMarkup = arr.filter((val) => {\r\n        if (filterWord === \"\") {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(filterWord.toLowerCase())) {\r\n            return val\r\n        }\r\n    }).map((val, index) => {\r\n        return (\r\n            <li key={index}>{val.name}: {val.number}\r\n                <button className=\"delete-button\" id={val.name} type=\"button\" onClick={deleteContact}>Delete</button>\r\n            </li>\r\n            \r\n        )\r\n    })     \r\n    return (\r\n        listMarkup\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        arr: state.contacts,\r\n        filterWord: state.filter,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        deleteContact: (e) => dispatch(actions.deleteContact(e))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItems);","import { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction Form({ onSubmit, existing }) {\r\n    const nameId = uuid()\r\n    const numberId = uuid()\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleContactName = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleContactNumber = (e) => {\r\n        setNumber(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n        if (existing.some(e => e.name === name)) {\r\n            alert(`${name} already exists.`)\r\n            return\r\n      }\r\n      \r\n        const obj = {\r\n        name: name,\r\n        number: number,\r\n        }\r\n\r\n        onSubmit(obj)\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor={nameId}>\r\n            <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n              name=\"name\"\r\n              id={nameId}\r\n              value={name}\r\n            placeholder=\"Enter contact's name...\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleContactName}\r\n          />\r\n          </label>\r\n          <label htmlFor={numberId}>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={numberId}\r\n              value={number}\r\n              placeholder=\"Enter contact's number...\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleContactNumber}\r\n            />\r\n\r\n          </label>\r\n          <button className=\"add-button\" type=\"submit\">Add contact</button>\r\n        </form>\r\n      )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: (obj) => dispatch(actions.addContact(obj))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Form)","import { connect } from \"react-redux\"\r\nimport * as actions from '../../redux/actions'\r\n\r\nfunction Filter({handleSearch}) {\r\n\r\n    return (\r\n        <input\r\n            type=\"search\"\r\n            name=\"nameSearch\"\r\n            placeholder=\"Enter name\"\r\n            onChange={handleSearch}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleSearch: (e) => dispatch(actions.filter(e))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import './App.scss';\r\nimport { useEffect } from 'react';\r\n\r\nimport ListItems from './components/Contacts_List/ListItems'\r\nimport Form from './components/Form/Form'\r\nimport Filter from './components/Filter/Filter'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as actions from './redux/actions'\r\n\r\nfunction App({ contacts, filter, onLoad }) {\r\n\r\n  useEffect(() => {\r\n        if (localStorage.getItem(\"contacts\")) {\r\n            onLoad(JSON.parse(localStorage.getItem(\"contacts\")))\r\n        }\r\n    }, [])\r\n\r\n  useEffect(() => {\r\n     localStorage.setItem(\"contacts\", JSON.stringify(contacts))\r\n  }, [contacts])\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Form existing={contacts}/>\r\n        <h2>Contacts</h2>\r\n        <h3>Find contacts by name</h3>\r\n        <Filter filter={filter}/>\r\n        <ul>\r\n          <ListItems arr={contacts} filter={filter} />\r\n        </ul>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n    filter: state.filter,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLoad: (existingContacts) => dispatch(actions.pageLoaded(existingContacts))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","// import { createStore } from 'redux';\r\nimport { configureStore, createReducer } from '@reduxjs/toolkit'\r\nimport * as actions from './actions'\r\n\r\nconst initialState = { contacts: [], filter: '' }\r\n\r\nconst reducer = createReducer(initialState, {\r\n    [actions.addContact]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            contacts: [...state.contacts, action.payload]\r\n        };\r\n    },\r\n    [actions.deleteContact]: (state, action) => {\r\n        const contactsList = state.contacts.filter(contact => contact.name !== action.payload.target.id);\r\n            return {\r\n                ...state,\r\n                contacts: contactsList\r\n        };\r\n    },\r\n    [actions.filter]: (state, action) => {\r\n        return {\r\n                ...state,\r\n                filter: action.payload.target.value\r\n        };\r\n    },\r\n    [actions.pageLoaded]: (state, action) => {\r\n        return {\r\n            ...state,\r\n            contacts: action.payload\r\n        };\r\n    }\r\n\r\n})\r\n\r\n// const reducer = (state = initialState, action) => {\r\n//     console.log(action)\r\n//     switch (action.type) {\r\n//         case 'form/addContact':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: [...state.contacts, action.payload]\r\n//             };\r\n\r\n//         case 'form/deleteContact':\r\n//             const contactsList = state.contacts.filter(contact => contact.name !== action.payload.target.id);\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: contactsList\r\n//             };\r\n        \r\n//         case 'filter/changeFilter':\r\n//             return {\r\n//                 ...state,\r\n//                 filter: action.payload.target.value\r\n//             };\r\n        \r\n//         case 'page/pageLoaded':\r\n//             return {\r\n//                 ...state,\r\n//                 contacts: action.payload\r\n//             }\r\n        \r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// const store = createStore(reducer, composeWithDevTools());\r\n\r\nconst store = configureStore({\r\n    reducer: reducer,\r\n    devTools: process.env.NODE_ENV === \"development\",\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}